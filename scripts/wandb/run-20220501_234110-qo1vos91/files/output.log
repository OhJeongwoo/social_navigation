
{'exp_name': 'pedsim_cpo', 'exp_epi_len': 200, 'pi_hidden_layers': [128, 128], 'pi_options': ['default', 'leaky-relu', 'default'], 'replay_size': 10000, 'gamma': 0.99, 'lambda': 0.97, 'polyak': 0.995, 'alpha': 0.002, 'learning_rate': 0.0001, 'epochs': 1000, 'steps_per_epoch': 100, 'batch_size': 256, 'n_log_epi': 10, 'start_steps': 100, 'update_after': 100, 'update_every': 20, 'save_interval': 10, 'plot_rendering': True, 'seed': 1}
/home/brain5/anaconda3/lib/python3.8/site-packages/torch/cuda/__init__.py:80: UserWarning: CUDA initialization: CUDA unknown error - this may be due to an incorrectly set up environment, e.g. changing env variable CUDA_VISIBLE_DEVICES after program start. Setting the available devices to be zero. (Triggered internally at  ../c10/cuda/CUDAFunctions.cpp:112.)
  return torch._C._cuda_getDeviceCount() > 0
model_state:
  model_name: "goal"
  pose:
    position:
      x: -29.782159999999998
      y: -4.2335599999999936
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
model_state:
  model_name: "goal"
  pose:
    position:
      x: -0.5524799999999885
      y: -4.938320000000001
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -29.732279999999992
      y: -4.132879999999997
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
> /home/brain5/catkin_ws/src/social_navigation/scripts/cpo_discrete.py(126)getObjective()
    125         import ipdb;ipdb.set_trace()
--> 126         probs = ac_.pi(flat, encoded)
    127         action_probs = probs.gather(1, actions.long()).squeeze(-1)


[?2004h[?1l[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lg[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7le[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7le[?7h[?1ipdb> gaes.shape
[?7h[?12l[?25h[?2004ltorch.Size([10000])

[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7ll[?7h[?12l[?25h[?25l[?7l_[?7h[?12l[?25h[?25l[?7lr[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7ld[?7h[?12l[?25h[?25l[?7l_[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7lr[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7lb[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7le[?ipdb> old_probs.shape
[?7h[?12l[?25h[?2004ltorch.Size([10000, 15])
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /home/brain5/catkin_ws/src/social_navigation/scripts/cpo_discrete.py(127)getObjective()
    126         probs = ac_.pi(flat, encoded)
--> 127         action_probs = probs.gather(1, actions.long()).squeeze(-1)
    128         log_probs =  torch.log(action_probs)
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7lr[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7lb[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l[[?7h[?12l[?25h[?25l[?7l0[?7h[?12l[ipdb> probs[0

]
[?7h[?12l[?25h[?2004ltensor([0.0696, 0.0668, 0.0657, 0.0700, 0.0698, 0.0690, 0.0570, 0.0617, 0.0599,
        0.0638, 0.0636, 0.0672, 0.0676, 0.0727, 0.0757],
       grad_fn=<SelectBackward0>)


[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7lr[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7lb[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lc[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7le[?7hipdb> actions.shape
[?7h[?12l[?25h[?2004ltorch.Size([10000, 1])
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lc[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?ipdb> n
[?7h[?12l[?25h[?2004l> /home/brain5/catkin_ws/src/social_navigation/scripts/cpo_discrete.py(128)getObjective()
    127         action_probs = probs.gather(1, actions.long()).squeeze(-1)
--> 128         log_probs =  torch.log(action_probs)
    129         old_action_probs = old_probs.gather(1, actions.long()).squeeze(-1)
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lc[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?25l[?7l_[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7lr[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7lb[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l[[?7h[?12l[?25h[?25l[?7l0[?7h[?12l[?25h[?25l[?7l][?ipdb> action_probs[0]
[?7h[?12l[?25h[?2004ltensor(0.0599, grad_fn=<SelectBackward0>)
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lc[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l[[?7h[?12l[?25h[?25l[?7l0[?7h[?12l[?25h[?25l[?7l][?7h[?1ipdb> actions[0]
[?7h[?12l[?25h[?2004ltensor([8.])
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lc[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lo[?7h[?12l[?25h[?25l[?7ln[?7h[?12l[?25h



[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lg[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7le[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7l.[?7h[?12l[?25h[?25l[?7ls[?7h[?12l[?25h[?25l[?7lh[?7h[?12l[?25h[?25l[?7la[?7h[?12l[?25h[?25l[?7lp[?7h[?12l[?25h[?25l[?7le[?7h[?1ipdb> gaes.shape
[?7h[?12l[?25h[?2004ltorch.Size([10000])
[?2004h[?25l[?7lipdb> [?7h[?12l[?25h[?25l[?7l[?7h[?12l[?25h[?25l[?7lq[?7h[?12l[?25h[?25l[?7lu[?7h[?12l[?25h[?25l[?7li[?7h[?12l[?25h[?25l[?7lt[?7h[?12l[?25h[?25l[?7l([?7h[?12l[?25h[?25l[?7l)[?7h[?12l[?ipdb> quit()
[?7h[?12l[?25h[?2004l
Traceback (most recent call last):
  File "cpo_discrete.py", line 460, in <module>
    log_infos = update(data=batch)
  File "cpo_discrete.py", line 251, in update
    objective = getObjective(state_flat_tensor, encoded_o, actions_tensor, gaes_tensor, old_probs)
  File "cpo_discrete.py", line 128, in getObjective
    log_probs =  torch.log(action_probs)
  File "cpo_discrete.py", line 128, in getObjective
    log_probs =  torch.log(action_probs)
  File "/home/brain5/anaconda3/lib/python3.8/bdb.py", line 88, in trace_dispatch
    return self.dispatch_line(frame)
  File "/home/brain5/anaconda3/lib/python3.8/bdb.py", line 113, in dispatch_line
    if self.quitting: raise BdbQuit
bdb.BdbQuit
If you suspect this is an IPython 7.22.0 bug, please report it at:
    https://github.com/ipython/ipython/issues
or send an email to the mailing list at ipython-dev@python.org
You can print a more detailed traceback right now with "%tb", or use "%debug"
to interactively debug it.
Extra-detailed tracebacks for bug-reporting purposes can be enabled via:
    %config Application.verbose_crash=True