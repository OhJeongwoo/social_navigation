
{'exp_name': 'pedsim_cpo', 'exp_epi_len': 200, 'pi_hidden_layers': [128, 128], 'pi_options': ['default', 'leaky-relu', 'default'], 'replay_size': 10000, 'gamma': 0.99, 'lambda': 0.97, 'polyak': 0.995, 'alpha': 0.002, 'learning_rate': 0.0001, 'epochs': 1000, 'steps_per_epoch': 1000, 'batch_size': 256, 'n_log_epi': 10, 'start_steps': 1000, 'update_after': 1000, 'update_every': 200, 'save_interval': 10, 'plot_rendering': True, 'seed': 1}
model_state:
  model_name: "goal"
  pose:
    position:
      x: 18.451800000000013
      y: -3.478460000000002
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
model_state:
  model_name: "goal"
  pose:
    position:
      x: 27.729480000000017
      y: 16.20448
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 29.37552
      y: 10.415380000000003
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 15.059960000000011
      y: -0.6594199999999972
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 28.776960000000024
      y: 2.4616600000000055
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -26.83923999999999
      y: 0.6494200000000028
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -21.103039999999993
      y: -1.4145199999999996
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -12.623439999999988
      y: -4.73696
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -26.988879999999995
      y: -0.6090799999999987
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 14.361640000000016
      y: -7.9083799999999975
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -28.086239999999993
      y: -7.656679999999998
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -25.39271999999999
      y: -3.579139999999999
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -7.535679999999992
      y: -0.45805999999999614
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -2.2483999999999895
      y: -3.881179999999997
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 8.37604000000001
      y: -0.004999999999999005
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -21.103039999999993
      y: -1.4145199999999996
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 18.651320000000005
      y: -4.887979999999995
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
out of bounds
model_state:
  model_name: "goal"
  pose:
    position:
      x: 18.950600000000016
      y: -3.7301600000000015
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 13.76308000000001
      y: -3.126079999999998
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: 29.12612000000002
      y: 2.663020000000003
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
out of bounds
model_state:
  model_name: "goal"
  pose:
    position:
      x: -11.476199999999992
      y: -2.219959999999997
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
lidar collision
model_state:
  model_name: "goal"
  pose:
    position:
      x: -4.592759999999991
      y: -0.6594199999999972
      z: 3.0
    orientation:
      x: 0.0
      y: 0.0
      z: 0.0
      w: 1.0
  twist:
    linear:
      x: 0.0
      y: 0.0
      z: 0.0
    angular:
      x: 0.0
      y: 0.0
      z: 0.0
  reference_frame: ''
success: True
status_message: "SetModelState: set model state done"
Traceback (most recent call last):
  File "cpo_discrete.py", line 462, in <module>
    log_infos = update(data=batch)
  File "cpo_discrete.py", line 229, in update
    encoded_o = ac_.encoder(state_grid_tensor)
  File "/home/brain5/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/brain5/catkin_ws/src/social_navigation/scripts/model_discrete.py", line 142, in forward
    return self.conv(input_)
  File "/home/brain5/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/brain5/anaconda3/lib/python3.8/site-packages/torch/nn/modules/container.py", line 141, in forward
    input = module(input)
  File "/home/brain5/anaconda3/lib/python3.8/site-packages/torch/nn/modules/module.py", line 1102, in _call_impl
    return forward_call(*input, **kwargs)
  File "/home/brain5/anaconda3/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 446, in forward
    return self._conv_forward(input, self.weight, self.bias)
  File "/home/brain5/anaconda3/lib/python3.8/site-packages/torch/nn/modules/conv.py", line 442, in _conv_forward
    return F.conv2d(input, weight, bias, self.stride,
RuntimeError: CUDA out of memory. Tried to allocate 1.91 GiB (GPU 0; 5.81 GiB total capacity; 1.81 GiB already allocated; 1.85 GiB free; 1.81 GiB reserved in total by PyTorch) If reserved memory is >> allocated memory try setting max_split_size_mb to avoid fragmentation.  See documentation for Memory Management and PYTORCH_CUDA_ALLOC_CONF